# Choregraphe bezier export in Python.
from naoqi import ALProxy
import sys
def main(robotIP, port):
    names = list()
    times = list()
    keys = list()

    names.append("HeadPitch")
    times.append([0.6, 1.16, 1.88, 2.44, 3.12, 3.64, 4.2, 4.92, 5.56, 6.24, 6.88, 7.6, 8.24, 8.92, 9.28, 9.6, 9.96, 10.28, 10.56, 10.84, 11.12, 11.48, 12.04, 12.48])
    keys.append([[-0.214801, [3, -0.213333, 0], [3, 0.186667, 0]], [0.217786, [3, -0.186667, 0], [3, 0.24, 0]], [-0.312978, [3, -0.24, 0], [3, 0.186667, 0]], [0.205514, [3, -0.186667, 0], [3, 0.226667, 0]], [-0.309909, [3, -0.226667, 0], [3, 0.173333, 0]], [0.185572, [3, -0.173333, 0], [3, 0.186667, 0]], [-0.185656, [3, -0.186667, 0], [3, 0.24, 0]], [0.315962, [3, -0.24, 0], [3, 0.213333, 0]], [-0.242414, [3, -0.213333, 0], [3, 0.226667, 0]], [0.21932, [3, -0.226667, 0], [3, 0.213333, 0]], [-0.34826, [3, -0.213333, 0], [3, 0.24, 0]], [0.236194, [3, -0.24, 0], [3, 0.213333, 0]], [-0.320648, [3, -0.213333, 0], [3, 0.226667, 0]], [0.259876, [3, -0.226667, 0], [3, 0.12, 0]], [-0.392432, [3, -0.12, 0], [3, 0.106667, 0]], [0.230731, [3, -0.106667, 0], [3, 0.12, 0]], [-0.363768, [3, -0.12, 0], [3, 0.106667, 0]], [0.1451, [3, -0.106667, 0], [3, 0.0933333, 0]], [-0.310897, [3, -0.0933333, 0], [3, 0.0933333, 0]], [0.113427, [3, -0.0933333, 0], [3, 0.0933333, 0]], [-0.138207, [3, -0.0933333, 0], [3, 0.12, 0]], [0.201243, [3, -0.12, 0], [3, 0.186667, 0]], [0.153801, [3, -0.186667, 0.0474422], [3, 0.146667, -0.037276]], [-0.177985, [3, -0.146667, 0], [3, 0, 0]]])

    names.append("HeadYaw")
    times.append([0.6, 1.16, 1.88, 2.44, 3.12, 3.64, 4.2, 4.92, 5.56, 6.24, 6.88, 7.6, 8.24, 8.92, 9.28, 9.6, 9.96, 10.28, 10.56, 10.84, 11.12, 11.48, 12.48])
    keys.append([[-0.0859459, [3, -0.213333, 0], [3, 0.186667, 0]], [-0.0798099, [3, -0.186667, -0.0026845], [3, 0.24, 0.0034515]], [-0.067538, [3, -0.24, 0], [3, 0.186667, 0]], [-0.0966839, [3, -0.186667, 0], [3, 0.226667, 0]], [-0.055266, [3, -0.226667, -0.0124595], [3, 0.173333, 0.00952783]], [-0.030722, [3, -0.173333, -0.00541635], [3, 0.186667, 0.00583299]], [-0.021518, [3, -0.186667, 0], [3, 0.24, 0]], [-0.058334, [3, -0.24, 0], [3, 0.213333, 0]], [-0.019984, [3, -0.213333, 0], [3, 0.226667, 0]], [-0.0445279, [3, -0.226667, 0.00632194], [3, 0.213333, -0.00595006]], [-0.0568, [3, -0.213333, 0.00385005], [3, 0.24, -0.0043313]], [-0.0690719, [3, -0.24, 0.00812117], [3, 0.213333, -0.00721882]], [-0.10282, [3, -0.213333, 0.0203295], [3, 0.226667, -0.0216001]], [-0.194861, [3, -0.226667, 0], [3, 0.12, 0]], [-0.165714, [3, -0.12, -0.0211152], [3, 0.106667, 0.0187691]], [-0.075208, [3, -0.106667, -0.0240627], [3, 0.12, 0.0270706]], [-0.012314, [3, -0.12, -0.0132646], [3, 0.106667, 0.0117907]], [-4.19617e-05, [3, -0.106667, 0], [3, 0.0933333, 0]], [-0.032256, [3, -0.0933333, 0.00715866], [3, 0.0933333, -0.00715866]], [-0.0429939, [3, -0.0933333, 0.00383501], [3, 0.0933333, -0.00383501]], [-0.055266, [3, -0.0933333, 0], [3, 0.12, 0]], [0.032172, [3, -0.12, 0], [3, 0.333333, 0]], [-0.00157596, [3, -0.333333, 0], [3, 0, 0]]])

    names.append("LAnklePitch")
    times.append([1.04, 1.76, 3, 4.08, 5.44, 6.12, 7.48, 8.8, 10.16, 11.24, 12.56])
    keys.append([[0.138018, [3, -0.36, 0], [3, 0.24, 0]], [0.0475121, [3, -0.24, 0.00356287], [3, 0.413333, -0.00613605]], [0.041376, [3, -0.413333, 0], [3, 0.36, 0]], [0.12728, [3, -0.36, 0], [3, 0.453333, 0]], [0.0475121, [3, -0.453333, 0.024544], [3, 0.226667, -0.012272]], [0.016832, [3, -0.226667, 0], [3, 0.453333, 0]], [0.016832, [3, -0.453333, 0], [3, 0.44, 0]], [-0.242414, [3, -0.44, 0], [3, 0.453333, 0]], [-0.242414, [3, -0.453333, 0], [3, 0.36, 0]], [-0.242414, [3, -0.36, 0], [3, 0.44, 0]], [0.067454, [3, -0.44, 0], [3, 0, 0]]])

    names.append("LAnkleRoll")
    times.append([1.04, 1.76, 3, 4.08, 5.44, 6.12, 7.48, 8.8, 10.16, 11.24, 12.56])
    keys.append([[-0.0966, [3, -0.36, 0], [3, 0.24, 0]], [-0.148756, [3, -0.24, 0.000890689], [3, 0.413333, -0.00153396]], [-0.15029, [3, -0.413333, 0], [3, 0.36, 0]], [-0.13495, [3, -0.36, 0], [3, 0.453333, 0]], [-0.136484, [3, -0.453333, 0.00153397], [3, 0.226667, -0.000766986]], [-0.147222, [3, -0.226667, 0.00076699], [3, 0.453333, -0.00153398]], [-0.148756, [3, -0.453333, 0.00153398], [3, 0.44, -0.00148886]], [-0.162562, [3, -0.44, 0], [3, 0.453333, 0]], [-0.162562, [3, -0.453333, 0], [3, 0.36, 0]], [-0.162562, [3, -0.36, 0], [3, 0.44, 0]], [-0.110406, [3, -0.44, 0], [3, 0, 0]]])

    names.append("LElbowRoll")
    times.append([0.52, 1.08, 1.8, 2.36, 3.04, 3.56, 4.12, 4.84, 5.48, 6.16, 6.8, 7.52, 8.16, 8.84, 9.52, 10.2, 10.76, 11.4, 12.4])
    keys.append([[-0.731675, [3, -0.186667, 0], [3, 0.186667, 0]], [-0.521518, [3, -0.186667, -0.00119323], [3, 0.24, 0.00153415]], [-0.519984, [3, -0.24, 0], [3, 0.186667, 0]], [-0.631966, [3, -0.186667, 0], [3, 0.226667, 0]], [-0.547595, [3, -0.226667, 0], [3, 0.173333, 0]], [-0.555266, [3, -0.173333, 0.0076707], [3, 0.186667, -0.00826076]], [-0.993989, [3, -0.186667, 0.144516], [3, 0.24, -0.185806]], [-1.54623, [3, -0.24, 0], [3, 0.213333, 0]], [-1.35448, [3, -0.213333, -0.136852], [3, 0.226667, 0.145405]], [-0.699462, [3, -0.226667, 0], [3, 0.213333, 0]], [-1.54623, [3, -0.213333, 0], [3, 0.24, 0]], [-0.506179, [3, -0.24, 0], [3, 0.213333, 0]], [-1.54776, [3, -0.213333, 0], [3, 0.226667, 0]], [-1.0216, [3, -0.226667, 0], [3, 0.226667, 0]], [-1.15199, [3, -0.226667, 0.0301686], [3, 0.226667, -0.0301686]], [-1.20261, [3, -0.226667, 0], [3, 0.186667, 0]], [-0.937231, [3, -0.186667, 0], [3, 0.213333, 0]], [-1.25784, [3, -0.213333, 0], [3, 0.333333, 0]], [-0.590548, [3, -0.333333, 0], [3, 0, 0]]])

    names.append("LElbowYaw")
    times.append([0.52, 1.08, 1.8, 2.36, 3.04, 3.56, 4.12, 4.84, 5.48, 6.16, 6.8, 7.52, 8.16, 8.84, 9.52, 10.2, 10.76, 11.4, 12.4])
    keys.append([[-1.07691, [3, -0.186667, 0], [3, 0.186667, 0]], [-1.54171, [3, -0.186667, 0.0930628], [3, 0.24, -0.119652]], [-1.71505, [3, -0.24, 0.047171], [3, 0.186667, -0.0366886]], [-1.79329, [3, -0.186667, 0.0157028], [3, 0.226667, -0.0190676]], [-1.81937, [3, -0.226667, 0], [3, 0.173333, 0]], [-1.66443, [3, -0.173333, 0], [3, 0.186667, 0]], [-1.76875, [3, -0.186667, 0], [3, 0.24, 0]], [-1.2165, [3, -0.24, -0.158635], [3, 0.213333, 0.141009]], [-0.86982, [3, -0.213333, -0.101399], [3, 0.226667, 0.107736]], [-0.589097, [3, -0.226667, 0], [3, 0.213333, 0]], [-1.39752, [3, -0.213333, 0], [3, 0.24, 0]], [-0.490923, [3, -0.24, 0], [3, 0.213333, 0]], [-1.19656, [3, -0.213333, 0], [3, 0.226667, 0]], [-1.16128, [3, -0.226667, -0.0352836], [3, 0.226667, 0.0352836]], [-0.940383, [3, -0.226667, -0.00613486], [3, 0.226667, 0.00613486]], [-0.934249, [3, -0.226667, -0.00613486], [3, 0.186667, 0.00505224]], [-0.903567, [3, -0.186667, -0.0221921], [3, 0.213333, 0.0253623]], [-0.791585, [3, -0.213333, 0], [3, 0.333333, 0]], [-1.2165, [3, -0.333333, 0], [3, 0, 0]]])

    names.append("LHand")
    times.append([1.08, 1.8, 3.04, 4.12, 5.48, 6.16, 7.52, 8.84, 9.52, 10.2, 11.4, 12.4])
    keys.append([[0.230571, [3, -0.373333, 0], [3, 0.24, 0]], [0.230935, [3, -0.24, 0], [3, 0.413333, 0]], [0.230935, [3, -0.413333, 0], [3, 0.36, 0]], [0.224389, [3, -0.36, 0], [3, 0.453333, 0]], [0.618182, [3, -0.453333, -0.115388], [3, 0.226667, 0.0576941]], [0.743636, [3, -0.226667, 0], [3, 0.453333, 0]], [0.715296, [3, -0.453333, 0.00934561], [3, 0.44, -0.00907074]], [0.688387, [3, -0.44, 0], [3, 0.226667, 0]], [0.6992, [3, -0.226667, 0], [3, 0.226667, 0]], [0.6992, [3, -0.226667, 0], [3, 0.4, 0]], [0.684, [3, -0.4, 0.0152], [3, 0.333333, -0.0126666]], [0.232025, [3, -0.333333, 0], [3, 0, 0]]])

    names.append("LHipPitch")
    times.append([1.04, 1.76, 3, 4.08, 5.44, 6.12, 7.48, 8.8, 10.16, 11.24, 12.56])
    keys.append([[0.0261199, [3, -0.36, 0], [3, 0.24, 0]], [0.205598, [3, -0.24, 0], [3, 0.413333, 0]], [0.204064, [3, -0.413333, 0.00153413], [3, 0.36, -0.00133618]], [0.0982179, [3, -0.36, 0.053866], [3, 0.453333, -0.0678313]], [-0.161028, [3, -0.453333, 0], [3, 0.226667, 0]], [0.021518, [3, -0.226667, 0], [3, 0.453333, 0]], [-0.288349, [3, -0.453333, 0.139861], [3, 0.44, -0.135748]], [-0.805309, [3, -0.44, 0], [3, 0.453333, 0]], [-0.805309, [3, -0.453333, 0], [3, 0.36, 0]], [-0.805309, [3, -0.36, 0], [3, 0.44, 0]], [0.211735, [3, -0.44, 0], [3, 0, 0]]])

    names.append("LHipRoll")
    times.append([1.04, 1.76, 3, 4.08, 5.44, 6.12, 7.48, 8.8, 10.16, 11.24, 12.56])
    keys.append([[0.073674, [3, -0.36, 0], [3, 0.24, 0]], [0.154976, [3, -0.24, 0], [3, 0.413333, 0]], [0.153442, [3, -0.413333, 0.00153396], [3, 0.36, -0.00133603]], [0.124296, [3, -0.36, 0.00701618], [3, 0.453333, -0.00883519]], [0.105888, [3, -0.453333, 0], [3, 0.226667, 0]], [0.14117, [3, -0.226667, 0], [3, 0.453333, 0]], [0.138102, [3, -0.453333, 0.00306794], [3, 0.44, -0.0029777]], [0.090548, [3, -0.44, 0], [3, 0.453333, 0]], [0.090548, [3, -0.453333, 0], [3, 0.36, 0]], [0.090548, [3, -0.36, 0], [3, 0.44, 0]], [0.121228, [3, -0.44, 0], [3, 0, 0]]])

    names.append("LHipYawPitch")
    times.append([1.04, 1.76, 3, 4.08, 5.44, 6.12, 7.48, 8.8, 10.16, 11.24, 12.56])
    keys.append([[-0.214717, [3, -0.36, 0], [3, 0.24, 0]], [-0.223922, [3, -0.24, 0.00225404], [3, 0.413333, -0.00388196]], [-0.233125, [3, -0.413333, 0.0057392], [3, 0.36, -0.00499865]], [-0.256136, [3, -0.36, 0.0181064], [3, 0.453333, -0.0228006]], [-0.355846, [3, -0.453333, 0], [3, 0.226667, 0]], [-0.305225, [3, -0.226667, 0], [3, 0.453333, 0]], [-0.355846, [3, -0.453333, 0.0267266], [3, 0.44, -0.0259405]], [-0.463226, [3, -0.44, 0], [3, 0.453333, 0]], [-0.463226, [3, -0.453333, 0], [3, 0.36, 0]], [-0.463226, [3, -0.36, 0], [3, 0.44, 0]], [-0.14262, [3, -0.44, 0], [3, 0, 0]]])

    names.append("LKneePitch")
    times.append([1.04, 1.76, 3, 4.08, 5.44, 6.12, 7.48, 8.8, 10.16, 11.24, 12.56])
    keys.append([[-0.0923279, [3, -0.36, 0], [3, 0.24, 0]], [-0.0874799, [3, -0.24, 0], [3, 0.413333, 0]], [-0.090548, [3, -0.413333, 0.000863725], [3, 0.36, -0.000752276]], [-0.0923279, [3, -0.36, 0], [3, 0.453333, 0]], [0.154892, [3, -0.453333, 0], [3, 0.226667, 0]], [0.110406, [3, -0.226667, 0], [3, 0.453333, 0]], [0.332836, [3, -0.453333, -0.15024], [3, 0.44, 0.145822]], [0.998592, [3, -0.44, 0], [3, 0.453333, 0]], [0.998592, [3, -0.453333, 0], [3, 0.36, 0]], [0.998592, [3, -0.36, 0], [3, 0.44, 0]], [-0.092082, [3, -0.44, 0], [3, 0, 0]]])

    names.append("LShoulderPitch")
    times.append([0.52, 1.08, 1.8, 2.36, 3.04, 3.56, 4.12, 4.84, 5.48, 6.16, 6.8, 7.52, 8.16, 8.84, 9.52, 10.2, 10.76, 11.4, 12.4])
    keys.append([[1.54776, [3, -0.186667, 0], [3, 0.186667, 0]], [1.6981, [3, -0.186667, 0], [3, 0.24, 0]], [1.69043, [3, -0.24, 0.00766897], [3, 0.186667, -0.00596476]], [1.57998, [3, -0.186667, 0], [3, 0.226667, 0]], [1.67509, [3, -0.226667, 0], [3, 0.173333, 0]], [1.60759, [3, -0.173333, 0], [3, 0.186667, 0]], [1.84382, [3, -0.186667, 0], [3, 0.24, 0]], [0.493905, [3, -0.24, 0.485916], [3, 0.213333, -0.431925]], [-0.909704, [3, -0.213333, 0], [3, 0.226667, 0]], [-0.719487, [3, -0.226667, -0.0856096], [3, 0.213333, 0.0805737]], [-0.411154, [3, -0.213333, 0], [3, 0.24, 0]], [-0.955723, [3, -0.24, 0], [3, 0.213333, 0]], [0.34971, [3, -0.213333, -0.382539], [3, 0.226667, 0.406448]], [1.41124, [3, -0.226667, 0], [3, 0.226667, 0]], [1.33914, [3, -0.226667, 0], [3, 0.226667, 0]], [1.43885, [3, -0.226667, -0.0330881], [3, 0.186667, 0.0272491]], [1.52015, [3, -0.186667, 0], [3, 0.213333, 0]], [1.37289, [3, -0.213333, 0], [3, 0.333333, 0]], [1.59685, [3, -0.333333, 0], [3, 0, 0]]])

    names.append("LShoulderRoll")
    times.append([0.52, 1.08, 1.8, 2.36, 3.04, 3.56, 4.12, 4.84, 5.48, 6.16, 6.8, 7.52, 8.16, 8.84, 9.52, 10.2, 10.76, 11.4, 12.4])
    keys.append([[0.116542, [3, -0.186667, 0], [3, 0.186667, 0]], [0.171766, [3, -0.186667, -0.00238685], [3, 0.24, 0.00306881]], [0.174835, [3, -0.24, 0], [3, 0.186667, 0]], [0.11961, [3, -0.186667, 0], [3, 0.226667, 0]], [0.122678, [3, -0.226667, 0], [3, 0.173333, 0]], [0.11194, [3, -0.173333, 0], [3, 0.186667, 0]], [0.128814, [3, -0.186667, -0.016874], [3, 0.24, 0.0216952]], [0.421808, [3, -0.24, -0.0822946], [3, 0.213333, 0.0731508]], [0.59515, [3, -0.213333, 0], [3, 0.226667, 0]], [0.423342, [3, -0.226667, 0], [3, 0.213333, 0]], [1.12438, [3, -0.213333, 0], [3, 0.24, 0]], [0.193243, [3, -0.24, 0], [3, 0.213333, 0]], [0.461692, [3, -0.213333, 0], [3, 0.226667, 0]], [0.368118, [3, -0.226667, 0], [3, 0.226667, 0]], [0.412605, [3, -0.226667, -0.00306829], [3, 0.226667, 0.00306829]], [0.415673, [3, -0.226667, 0], [3, 0.186667, 0]], [0.363515, [3, -0.186667, 0], [3, 0.213333, 0]], [0.412605, [3, -0.213333, 0], [3, 0.333333, 0]], [0.174835, [3, -0.333333, 0], [3, 0, 0]]])

    names.append("LWristYaw")
    times.append([1.08, 1.8, 3.04, 4.12, 5.48, 6.16, 7.52, 8.84, 9.52, 10.2, 11.4, 12.4])
    keys.append([[0.095066, [3, -0.373333, 0], [3, 0.24, 0]], [0.0966, [3, -0.24, 0], [3, 0.413333, 0]], [0.095066, [3, -0.413333, 0.00136647], [3, 0.36, -0.00119015]], [0.0889301, [3, -0.36, 0], [3, 0.453333, 0]], [0.575959, [3, -0.453333, 0], [3, 0.226667, 0]], [0.314159, [3, -0.226667, 0], [3, 0.453333, 0]], [0.31903, [3, -0.453333, 0], [3, 0.44, 0]], [0.282215, [3, -0.44, 0.036816], [3, 0.226667, -0.0189658]], [-0.276162, [3, -0.226667, 0], [3, 0.226667, 0]], [-0.188724, [3, -0.226667, -0.0384697], [3, 0.4, 0.0678876]], [0.0429101, [3, -0.4, -0.055503], [3, 0.333333, 0.0462525]], [0.116542, [3, -0.333333, 0], [3, 0, 0]]])

    names.append("RAnklePitch")
    times.append([1.04, 1.76, 3, 4.08, 5.44, 6.12, 7.48, 8.8, 10.16, 11.24, 12.56])
    keys.append([[0.145772, [3, -0.36, 0], [3, 0.24, 0]], [0.0568, [3, -0.24, 0.000890691], [3, 0.413333, -0.00153397]], [0.055266, [3, -0.413333, 0], [3, 0.36, 0]], [0.14117, [3, -0.36, 0], [3, 0.453333, 0]], [0.046062, [3, -0.453333, 0.0255667], [3, 0.226667, -0.0127833]], [0.0261199, [3, -0.226667, 0.00374979], [3, 0.453333, -0.00749957]], [0.012314, [3, -0.453333, 0.0138059], [3, 0.44, -0.0133999]], [-0.223922, [3, -0.44, 0], [3, 0.453333, 0]], [-0.223922, [3, -0.453333, 0], [3, 0.36, 0]], [-0.223922, [3, -0.36, 0], [3, 0.44, 0]], [0.0767419, [3, -0.44, 0], [3, 0, 0]]])

    names.append("RAnkleRoll")
    times.append([1.04, 1.76, 3, 4.08, 5.44, 6.12, 7.48, 8.8, 10.16, 11.24, 12.56])
    keys.append([[0.06447, [3, -0.36, 0], [3, 0.24, 0]], [0.073674, [3, -0.24, -0.00169052], [3, 0.413333, 0.00291145]], [0.0782759, [3, -0.413333, -0.00245967], [3, 0.36, 0.0021423]], [0.0874799, [3, -0.36, 0], [3, 0.453333, 0]], [0.066004, [3, -0.453333, 0], [3, 0.226667, 0]], [0.092082, [3, -0.226667, -0.00409066], [3, 0.453333, 0.00818133]], [0.10282, [3, -0.453333, 0], [3, 0.44, 0]], [0.090548, [3, -0.44, 0], [3, 0.453333, 0]], [0.090548, [3, -0.453333, 0], [3, 0.36, 0]], [0.090548, [3, -0.36, 0], [3, 0.44, 0]], [0.066004, [3, -0.44, 0], [3, 0, 0]]])

    names.append("RElbowRoll")
    times.append([0.44, 1, 1.72, 2.28, 2.96, 3.48, 4.04, 4.76, 5.4, 6.08, 6.72, 7.44, 8.08, 8.76, 9.44, 10.12, 10.68, 11.32, 12.32])
    keys.append([[1.55245, [3, -0.16, 0], [3, 0.186667, 0]], [0.994073, [3, -0.186667, 0], [3, 0.24, 0]], [1.51103, [3, -0.24, 0], [3, 0.186667, 0]], [0.879025, [3, -0.186667, 0], [3, 0.226667, 0]], [1.56207, [3, -0.226667, 0], [3, 0.173333, 0]], [1.04009, [3, -0.173333, 0], [3, 0.186667, 0]], [1.56207, [3, -0.186667, 0], [3, 0.24, 0]], [0.579894, [3, -0.24, 0], [3, 0.213333, 0]], [1.37604, [3, -0.213333, 0], [3, 0.226667, 0]], [0.607505, [3, -0.226667, 0], [3, 0.213333, 0]], [1.45734, [3, -0.213333, 0], [3, 0.24, 0]], [0.605971, [3, -0.24, 0], [3, 0.213333, 0]], [1.54938, [3, -0.213333, 0], [3, 0.226667, 0]], [0.676537, [3, -0.226667, 0], [3, 0.226667, 0]], [0.89283, [3, -0.226667, -0.0542012], [3, 0.226667, 0.0542012]], [1.00174, [3, -0.226667, 0], [3, 0.186667, 0]], [0.797722, [3, -0.186667, 0], [3, 0.213333, 0]], [1.1352, [3, -0.213333, 0], [3, 0.333333, 0]], [0.440299, [3, -0.333333, 0], [3, 0, 0]]])

    names.append("RElbowYaw")
    times.append([0.44, 1, 1.72, 2.28, 2.96, 3.48, 4.04, 4.76, 5.4, 6.08, 6.72, 7.44, 8.08, 8.76, 9.44, 10.12, 10.68, 11.32, 12.32])
    keys.append([[1.4005, [3, -0.16, 0], [3, 0.186667, 0]], [0.179436, [3, -0.186667, 0], [3, 0.24, 0]], [0.547595, [3, -0.24, 0], [3, 0.186667, 0]], [0.187106, [3, -0.186667, 0], [3, 0.226667, 0]], [0.5568, [3, -0.226667, 0], [3, 0.173333, 0]], [0.323633, [3, -0.173333, 0], [3, 0.186667, 0]], [0.546063, [3, -0.186667, 0], [3, 0.24, 0]], [0.20398, [3, -0.24, 0], [3, 0.213333, 0]], [0.447886, [3, -0.213333, 0], [3, 0.226667, 0]], [0.262272, [3, -0.226667, 0], [3, 0.213333, 0]], [0.671851, [3, -0.213333, 0], [3, 0.24, 0]], [0.357381, [3, -0.24, 0], [3, 0.213333, 0]], [1.62907, [3, -0.213333, 0], [3, 0.226667, 0]], [0.093532, [3, -0.226667, 0], [3, 0.226667, 0]], [0.450955, [3, -0.226667, -0.0153397], [3, 0.226667, 0.0153397]], [0.466294, [3, -0.226667, -0.0114966], [3, 0.186667, 0.00946776]], [0.513848, [3, -0.186667, -0.0269641], [3, 0.213333, 0.0308162]], [0.639635, [3, -0.213333, -0.0858044], [3, 0.333333, 0.134069]], [1.17347, [3, -0.333333, 0], [3, 0, 0]]])

    names.append("RHand")
    times.append([1, 1.72, 2.96, 4.04, 5.4, 6.08, 7.44, 8.76, 9.44, 10.12, 11.32, 12.32])
    keys.append([[0.745455, [3, -0.346667, 0], [3, 0.24, 0]], [0.514873, [3, -0.24, 0], [3, 0.413333, 0]], [0.514873, [3, -0.413333, 0], [3, 0.36, 0]], [0.781818, [3, -0.36, -0.00433193], [3, 0.453333, 0.00545502]], [0.787273, [3, -0.453333, 0], [3, 0.226667, 0]], [0.7, [3, -0.226667, 0], [3, 0.453333, 0]], [0.818182, [3, -0.453333, 0], [3, 0.44, 0]], [0.514873, [3, -0.44, 0], [3, 0.226667, 0]], [0.6944, [3, -0.226667, -0.0473212], [3, 0.226667, 0.0473212]], [0.7988, [3, -0.226667, 0], [3, 0.4, 0]], [0.5424, [3, -0.4, 0.0706533], [3, 0.333333, -0.0588777]], [0.410207, [3, -0.333333, 0], [3, 0, 0]]])

    names.append("RHipPitch")
    times.append([1.04, 1.76, 3, 4.08, 5.44, 6.12, 7.48, 8.8, 10.16, 11.24, 12.56])
    keys.append([[0.00456004, [3, -0.36, 0], [3, 0.24, 0]], [0.213183, [3, -0.24, 0], [3, 0.413333, 0]], [0.213183, [3, -0.413333, 0], [3, 0.36, 0]], [0.0797261, [3, -0.36, 0.0520553], [3, 0.453333, -0.0655511]], [-0.139636, [3, -0.453333, 0], [3, 0.226667, 0]], [-0.00771196, [3, -0.226667, 0], [3, 0.453333, 0]], [-0.233209, [3, -0.453333, 0.133893], [3, 0.44, -0.129955]], [-0.799256, [3, -0.44, 0], [3, 0.453333, 0]], [-0.799256, [3, -0.453333, 0], [3, 0.36, 0]], [-0.799256, [3, -0.36, 0], [3, 0.44, 0]], [0.193243, [3, -0.44, 0], [3, 0, 0]]])

    names.append("RHipRoll")
    times.append([1.04, 1.76, 3, 4.08, 5.44, 6.12, 7.48, 8.8, 10.16, 11.24, 12.56])
    keys.append([[-0.05058, [3, -0.36, 0], [3, 0.24, 0]], [-0.0643861, [3, -0.24, 0], [3, 0.413333, 0]], [-0.0643861, [3, -0.413333, 0], [3, 0.36, 0]], [-0.076658, [3, -0.36, 0], [3, 0.453333, 0]], [-0.016832, [3, -0.453333, 0], [3, 0.226667, 0]], [-0.078192, [3, -0.226667, 0], [3, 0.453333, 0]], [-0.0459781, [3, -0.453333, -0.0147905], [3, 0.44, 0.0143555]], [0.00924586, [3, -0.44, 0], [3, 0.453333, 0]], [0.00924586, [3, -0.453333, 0], [3, 0.36, 0]], [0.00924586, [3, -0.36, 0], [3, 0.44, 0]], [-0.0735901, [3, -0.44, 0], [3, 0, 0]]])

    names.append("RKneePitch")
    times.append([1.04, 1.76, 3, 4.08, 5.44, 6.12, 7.48, 8.8, 10.16, 11.24, 12.56])
    keys.append([[-0.0923279, [3, -0.36, 0], [3, 0.24, 0]], [-0.0923279, [3, -0.24, 0], [3, 0.413333, 0]], [-0.0923279, [3, -0.413333, 0], [3, 0.36, 0]], [-0.0923279, [3, -0.36, 0], [3, 0.453333, 0]], [0.130432, [3, -0.453333, 0], [3, 0.226667, 0]], [0.113558, [3, -0.226667, 0], [3, 0.453333, 0]], [0.274628, [3, -0.453333, -0.143234], [3, 0.44, 0.139022]], [0.960325, [3, -0.44, 0], [3, 0.453333, 0]], [0.960325, [3, -0.453333, 0], [3, 0.36, 0]], [0.960325, [3, -0.36, 0], [3, 0.44, 0]], [-0.076658, [3, -0.44, 0], [3, 0, 0]]])

    names.append("RShoulderPitch")
    times.append([0.44, 1, 1.72, 2.28, 2.96, 3.48, 4.04, 4.76, 5.4, 6.08, 6.72, 7.44, 8.08, 8.76, 9.44, 10.12, 10.68, 11.32, 12.32])
    keys.append([[0.744032, [3, -0.16, 0], [3, 0.186667, 0]], [-0.808375, [3, -0.186667, 0.250554], [3, 0.24, -0.322141]], [-1.13052, [3, -0.24, 0], [3, 0.186667, 0]], [-0.777696, [3, -0.186667, 0], [3, 0.226667, 0]], [-0.780764, [3, -0.226667, 0.00306829], [3, 0.173333, -0.00234634]], [-0.84826, [3, -0.173333, 0.00997193], [3, 0.186667, -0.010739]], [-0.858999, [3, -0.186667, 0.010739], [3, 0.24, -0.0138073]], [-1.12898, [3, -0.24, 0.00690366], [3, 0.213333, -0.00613659]], [-1.13512, [3, -0.213333, 0], [3, 0.226667, 0]], [-0.880473, [3, -0.226667, 0], [3, 0.213333, 0]], [-1.01086, [3, -0.213333, 0], [3, 0.24, 0]], [-0.970981, [3, -0.24, -0.0398826], [3, 0.213333, 0.0354512]], [0.158044, [3, -0.213333, -0.153039], [3, 0.226667, 0.162604]], [0.320648, [3, -0.226667, -0.148798], [3, 0.226667, 0.148798]], [1.05083, [3, -0.226667, -0.111982], [3, 0.226667, 0.111982]], [1.16281, [3, -0.226667, -0.0325276], [3, 0.186667, 0.0267874]], [1.22878, [3, -0.186667, -0.0080527], [3, 0.213333, 0.00920309]], [1.23798, [3, -0.213333, -0.00920309], [3, 0.333333, 0.0143798]], [1.48342, [3, -0.333333, 0], [3, 0, 0]]])

    names.append("RShoulderRoll")
    times.append([0.44, 1, 1.72, 2.28, 2.96, 3.48, 4.04, 4.76, 5.4, 6.08, 6.72, 7.44, 8.08, 8.76, 9.44, 10.12, 10.68, 11.32, 12.32])
    keys.append([[-0.0614019, [3, -0.16, 0], [3, 0.186667, 0]], [-0.602903, [3, -0.186667, 0.178519], [3, 0.24, -0.229525]], [-1.28553, [3, -0.24, 0], [3, 0.186667, 0]], [-0.546147, [3, -0.186667, 0], [3, 0.226667, 0]], [-1.30548, [3, -0.226667, 0], [3, 0.173333, 0]], [-0.527739, [3, -0.173333, 0], [3, 0.186667, 0]], [-1.40365, [3, -0.186667, 0], [3, 0.24, 0]], [-0.230143, [3, -0.24, 0], [3, 0.213333, 0]], [-1.01555, [3, -0.213333, 0], [3, 0.226667, 0]], [-0.38661, [3, -0.226667, 0], [3, 0.213333, 0]], [-1.34843, [3, -0.213333, 0], [3, 0.24, 0]], [-0.326783, [3, -0.24, 0], [3, 0.213333, 0]], [-0.900499, [3, -0.213333, 0], [3, 0.226667, 0]], [-0.205598, [3, -0.226667, 0], [3, 0.226667, 0]], [-0.362067, [3, -0.226667, 0.0350264], [3, 0.226667, -0.0350264]], [-0.415757, [3, -0.226667, 0], [3, 0.186667, 0]], [-0.351328, [3, -0.186667, 0], [3, 0.213333, 0]], [-0.37127, [3, -0.213333, 0], [3, 0.333333, 0]], [-0.122762, [3, -0.333333, 0], [3, 0, 0]]])

    names.append("RWristYaw")
    times.append([1, 1.72, 2.96, 4.04, 5.4, 6.08, 7.44, 8.76, 9.44, 10.12, 11.32, 12.32])
    keys.append([[-0.122173, [3, -0.346667, 0], [3, 0.24, 0]], [-0.119694, [3, -0.24, 0], [3, 0.413333, 0]], [-0.119694, [3, -0.413333, 0], [3, 0.36, 0]], [-0.130432, [3, -0.36, 0.00271593], [3, 0.453333, -0.00342006]], [-0.138102, [3, -0.453333, 0.00204533], [3, 0.226667, -0.00102267]], [-0.139636, [3, -0.226667, 0.000852225], [3, 0.453333, -0.00170445]], [-0.145772, [3, -0.453333, 0.00613606], [3, 0.44, -0.00595558]], [-0.22554, [3, -0.44, 0], [3, 0.226667, 0]], [0.662646, [3, -0.226667, 0], [3, 0.226667, 0]], [0.529187, [3, -0.226667, 0.0693563], [3, 0.4, -0.122394]], [0.0873961, [3, -0.4, 0], [3, 0.333333, 0]], [0.161028, [3, -0.333333, 0], [3, 0, 0]]])

    try:
  # uncomment the following line and modify the IP if you use this script outside Choregraphe.
  # motion = ALProxy("ALMotion", IP, 9559)
        motion = ALProxy("ALMotion", robotIP, port)
        motion.angleInterpolationBezier(names, times, keys)
    except BaseException, err:
        print err


if __name__ == "__main__":

  robotIP = "127.0.0.1" #"192.168.1.11"

  port = 9559 # Insert NAO port

  if len(sys.argv) == 2:
    robotIP = sys.argv[1]
  elif len(sys.argv) > 2:
    port = int(sys.argv[2])
    robotIP = sys.argv[1]

  main(robotIP, port)